---
interface Props {
    title: string
    nav: object[]
}
const { title, nav } = Astro.props

// 将右侧导航栏输出为字符串，以方便传递
let navElement = ''
for (let i = 0; i < nav.length; i++) {
    let currentLink = nav[i]
    navElement += '<span class="item icon-external"><a href="' + currentLink.url +
        '" target="_blank">' + currentLink.name + '</a></span>'
}
---

<header class="fixed flex p-4 w-full whitespace-nowrap top">
    <div class="title text-xl font-semibold">
        <a href=".">{ title }</a></div>
    <div class="grow" />
    <div class="link h-4 leading-7" set:html={ navElement } />
</header>


<style lang="less">
    @import url("../styles/global.less");

    header {
        padding-left: calc(@c-layout-padding - 5%);
        padding-right: calc(@c-layout-padding - 5%);
        background-color: #fff;
        // backdrop-filter: blur(2px);
        // 将 less 变量暴露为普通 CSS 变量，以供 .item 使用
        --c-color-theme: @c-color-theme;
    }
    header:not(.top) {
        border-bottom: 1px solid @c-color-bar-border;
    }
</style>

<style is:global>
    header > .link > .item {
        padding: 0 16px;
    }
    header > .link > .item:hover, header > .title:hover {
        color: var(--c-color-theme);
    }
</style>

<script lang="ts">
    // 监听用户是否到顶
    var barEle = document.getElementsByTagName('header')[0]
    window.addEventListener('scroll', scroll)
    function scroll() {
        let mainPosition = document.getElementsByTagName('main')[0].getBoundingClientRect()
        if (mainPosition.y == 0) {
            barEle.classList.add('top')
        } else {
            barEle.classList.remove('top')
        }
    }
    // window.removeEventListener('scroll', scroll)
</script>